{"version":3,"sources":["init.ts","components/atoms/AppButton/index.tsx","assets/images/logo.svg","components/atoms/AppSelect/index.tsx","pages/index/index.tsx","App.tsx","reportWebVitals.ts","index.tsx","pages/index/main.module.scss","components/atoms/AppButton/main.module.scss","components/atoms/AppSelect/main.module.scss","App.module.scss"],"names":["speechTranslationConfig","AppButtonDom","text","accent","onClick","type","className","classes","button","primary","undefined","AppButton","subscriptionKey","process","region","SpeechSdk","fromSubscription","speechRecognitionLanguage","AppSelectDom","value","options","onChangeHandle","id","select","onChange","map","o","key","option","label","AppSelect","Index","useState","target","setTarget","translatedText","setTranslatedText","translateText","setTranslateText","translating","setTranslating","wrap","image","src","logo","alt","catchCopy","content","heading","formSection","htmlFor","event","addTargetLanguage","recognizer","recognizeOnceAsync","translations","translation","get","close","err","App","layout","exact","path","component","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","catch","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e53e740e.chunk.js","sourcesContent":["import * as SpeechSdk from 'microsoft-cognitiveservices-speech-sdk';\n\nconst subscriptionKey = process.env.REACT_APP_AZURE_SUBSCRIPTION_KEY;\nconst region = process.env.REACT_APP_AZURE_SERVICE_REGION;\n// TODO:日本語以外も対応したい\nconst language = 'ja-JP';\n\n// eslint-disable-next-line import/no-mutable-exports\nlet speechTranslationConfig: SpeechSdk.SpeechTranslationConfig;\n\nif (subscriptionKey && region) {\n  speechTranslationConfig = SpeechSdk.SpeechTranslationConfig.fromSubscription(subscriptionKey, region);\n  speechTranslationConfig.speechRecognitionLanguage = language;\n}\n\nexport { speechTranslationConfig };\n","// import層（他モジュールの読み込み）\nimport React from 'react';\nimport classes from './main.module.scss';\n\n// type層（ファイル内で扱う型の定義）\ninterface AppButtonProps {\n  text: string;\n  accent?: boolean;\n  onClick?: () => void;\n}\ninterface AppButtonDomProps {\n  text: string;\n  accent: boolean;\n  onClick?: () => void;\n}\n\n// DOM層（表示のみを担当するコンポーネント）\nconst AppButtonDom: React.FC<AppButtonDomProps> = ({ text, accent, onClick }: AppButtonDomProps) => (\n  <button\n    type=\"button\"\n    className={`${classes.button} ${accent ? classes.accent : classes.primary}`}\n    onClick={onClick ?? undefined}\n  >\n    {text}\n  </button>\n);\n\n// Container層（コンポーネント本体、状態・振る舞いを担当）\nconst AppButton: React.FC<AppButtonProps> = ({ text, accent = false, onClick = undefined }: AppButtonProps) => (\n  <AppButtonDom text={text} accent={accent} onClick={onClick} />\n);\n\n// export層（他ファイルで使いたいモジュールを公開）\nexport { AppButtonDom, AppButton };\n","export default __webpack_public_path__ + \"static/media/logo.b59fdaf7.svg\";","// import層（他モジュールの読み込み）\nimport React from 'react';\nimport classes from './main.module.scss';\n\n// type層（ファイル内で扱う型の定義）[\ntype Option = {\n  value: string;\n  label: string;\n};\ntype Options = Array<Option>;\n\ntype targetParam = {\n  value: string;\n};\n\ninterface AppSelectProps {\n  id: string;\n  value: string;\n  options: Options;\n  onChangeHandle: (event: React.ChangeEvent<targetParam>) => void;\n}\n\ninterface AppSelectDomProps {\n  id: string;\n  value: string;\n  options: Options;\n  onChangeHandle: (event: React.ChangeEvent<targetParam>) => void;\n}\n\n// DOM層（表示のみを担当するコンポーネント）\nconst AppSelectDom: React.FC<AppSelectDomProps> = ({ value, options, onChangeHandle, id }: AppSelectDomProps) => (\n  <select id={id} className={`${classes.select}`} value={value} onChange={onChangeHandle}>\n    {options.map((o, key) => (\n      // TODO:IDつけてあげたい\n      // eslint-disable-next-line react/no-array-index-key\n      <option key={key} className={`${classes.option}`} value={o.value}>\n        {o.label}\n      </option>\n    ))}\n  </select>\n);\n\n// Container層（コンポーネント本体、状態・振る舞いを担当）\nconst AppSelect: React.FC<AppSelectProps> = ({ value, options, onChangeHandle, id }: AppSelectProps) => (\n  <AppSelectDom id={id} value={value} options={options} onChangeHandle={onChangeHandle} />\n);\n\n// export層（他ファイルで使いたいモジュールを公開）\nexport { AppSelectDom, AppSelect };\n","import React, { useState } from 'react';\nimport * as SpeechSdk from 'microsoft-cognitiveservices-speech-sdk';\nimport { AppButton } from '../../components/atoms/AppButton';\nimport classes from './main.module.scss';\nimport logo from '../../assets/images/logo.svg';\nimport { speechTranslationConfig } from '../../init';\nimport { AppSelect } from '../../components/atoms/AppSelect';\n\ntype changeTargetParam = {\n  value: string;\n};\n\nconst Index: React.FC = () => {\n  const [target, setTarget] = useState<string>('en');\n  const [translatedText, setTranslatedText] = useState<string | null>(null);\n  const [translateText, setTranslateText] = useState<string>('');\n  const [translating, setTranslating] = useState<boolean>(false);\n\n  // TODO:どこかから一括で取得できるようにしたい\n  const options = [\n    { value: 'en', label: '英語' },\n    { value: 'fr', label: 'フランス語' },\n    { value: 'de', label: 'ドイツ語' },\n    { value: 'ko', label: '韓国語' },\n    { value: 'pt-pt', label: 'ポルトガル語(ポルトガル)' },\n    { value: 'pt-br', label: 'ポルトガル語(ブラジル)' },\n    { value: 'zh-Hans', label: '簡体中国語' },\n    { value: 'zh-Hant', label: '中国語 (繁体字)' },\n    { value: 'it', label: 'イタリア語' },\n    { value: 'es', label: 'スペイン語' },\n    { value: 'es', label: 'スペイン語' },\n    { value: 'ar', label: 'アラビア語' },\n  ];\n  const targetChangeHandler = (event: React.ChangeEvent<changeTargetParam>) => {\n    setTarget(event.target.value);\n  };\n\n  const onClick = () => {\n    setTranslating(true);\n    speechTranslationConfig.addTargetLanguage(target);\n    let recognizer: SpeechSdk.TranslationRecognizer | undefined = new SpeechSdk.TranslationRecognizer(\n      speechTranslationConfig\n    );\n    recognizer?.recognizeOnceAsync(\n      ({ translations, text }) => {\n        const translation = translations.get(target);\n        setTranslateText(text);\n        setTranslatedText(translation);\n        recognizer?.close();\n        recognizer = undefined;\n        setTranslating(false);\n      },\n      (err) => {\n        recognizer?.close();\n        recognizer = undefined;\n        setTranslating(false);\n      }\n    );\n  };\n  return (\n    <div className={classes.wrap}>\n      <div>\n        <p className={classes.image}>\n          <img src={logo} alt=\"SayHello\" />\n        </p>\n        <p className={classes.catchCopy}>あなたと世界をちょっと身近に</p>\n\n        <div className={classes.content}>\n          <p className={classes.heading}>「翻訳」ボタンを押して一言喋ってみよう</p>\n          <div className={classes.formSection}>\n            <p className={classes.label}>翻訳結果</p>\n            {}\n            <p>{translatedText ?? '翻訳してください....'}</p>\n            <p>{translatedText ? `翻訳前：${translateText}` : ''}</p>\n          </div>\n          <div className={classes.formSection}>\n            <label className={`${classes.label}`} htmlFor=\"target\">\n              翻訳したい言語\n            </label>\n            <AppSelect id=\"target\" value={target} options={options} onChangeHandle={targetChangeHandler} />\n          </div>\n          <div className={`${classes.formSection} ${classes.button}`}>\n            <AppButton text={translating ? '翻訳中...' : '翻訳'} onClick={onClick} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Index from './pages/index';\nimport classes from './App.module.scss';\n\nconst App: React.FC = () => (\n  <Router>\n    <div className={classes.layout}>\n      <Switch>\n        <Route exact path=\"/\" component={Index} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry) {\n    import('web-vitals')\n      .then(({ getCLS, getFID, getFCP, getLCP, getTTFB }): void => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      })\n      .catch(() => false);\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'destyle.css';\nimport './init';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"main_wrap__3k9TW\",\"image\":\"main_image__JDgfa\",\"catchCopy\":\"main_catchCopy__3Nsyg\",\"formSection\":\"main_formSection__2f5xY\",\"heading\":\"main_heading__kAadh\",\"label\":\"main_label__1RlG3\",\"button\":\"main_button__3Z9_B\",\"content\":\"main_content__1UhR_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"main_button__WKW16\",\"primary\":\"main_primary__1J1kq\",\"accent\":\"main_accent__1WUSs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"main_select__aiGLU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"App_layout__3IbE3\"};"],"sourceRoot":""}